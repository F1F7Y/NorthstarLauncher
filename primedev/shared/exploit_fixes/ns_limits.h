#pragma once
#include "engine/r2engine.h"
#include "tier1/convar.h"

#include "networksystem/netchannel.h"
#include <unordered_map>

struct PlayerLimitData
{
	double lastClientCommandQuotaStart = -1.0;
	int numClientCommandsInQuota = 0;

	double lastNetChanProcessingLimitStart = -1.0;
	double netChanProcessingLimitTime = 0.0;

	double lastSayTextLimitStart = -1.0;
	int sayTextLimitCount = 0;

	float flFrameUserCmdBudget = 0.0;
};

struct UnconnectedPlayerLimitData
{
	char ip[16];
	double lastQuotaStart = 0.0;
	int packetCount = 0;
	double timeoutEnd = -1.0;
};

class ServerLimitsManager
{
  public:
	std::unordered_map<CClient*, PlayerLimitData> m_PlayerLimitData;
	std::vector<UnconnectedPlayerLimitData> m_UnconnectedPlayerLimitData;

  public:
	void RunFrame(double flCurrentTime, float flFrameTime);
	void AddPlayer(CClient* player);
	void RemovePlayer(CClient* player);
	bool CheckStringCommandLimits(CClient* player);
	bool CheckChatLimits(CClient* player);
	bool CheckConnectionlessPacketLimits(netpacket_t* packet);
};

extern ServerLimitsManager* g_pServerLimits;
